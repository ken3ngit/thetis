
<%= form_tag({:controller => 'send_mails', :action => 'save'}, :method => 'post', :name => 'form_send_mail'+form_idx) %>
<div id="div_sendmail_content">
  <%= render(:partial => 'ajax_mail_content', :object => @email) %>
</div>
</form>

<div id="div_sendmail_attach" style="padding:10px 0px 20px;">
  <%= render(:partial => 'ajax_mail_attachments', :object => @email) %>
</div>


<script type="text/javascript">

if (typeof(thetisBoxMailForm) == "undefined") {
  thetisBoxMailForm = null;
}

_findInsertIdx = function(dst, valPrefix, val)
{
  var valOrder = parseInt(val.split("<%= Email::ADDR_ORDER_SEPARATOR %>")[1], 10);
  var valPrefixRaw = valPrefix.replace("<%= Email::ADDR_PREFIX_SEPARATOR %>", "");

  <%
  order_prefixes = []
  [Email::ADDR_PREFIX_TO, Email::ADDR_PREFIX_CC, Email::ADDR_PREFIX_BCC].each_with_index do |prefix, idx|
    order_prefixes << "#{prefix.gsub(Email::ADDR_PREFIX_SEPARATOR, '')}: #{idx}"
  end
  %>
  var orderPrefixes = {
      <%= raw(order_prefixes.join(',')) %>
  };

  var insertIdx = dst.length;

  for (var i=0; i < dst.options.length; i++) {
    var dstOption = dst.options[i];

    var dstOptParts = dstOption.value.split("<%= Email::ADDR_PREFIX_SEPARATOR %>");
    var dstOptPrefix = dstOptParts[0];
    var dstOptValue = dstOptParts[1];

    var dstOptValParts = dstOptValue.split("<%= Email::ADDR_ORDER_SEPARATOR %>");
    var dstOptValOrder = parseInt(dstOptValParts[1], 10);

    if (orderPrefixes[valPrefixRaw] < orderPrefixes[dstOptPrefix]) {
      insertIdx = i;
      break;
    } else if (orderPrefixes[valPrefixRaw] > orderPrefixes[dstOptPrefix]) {
      ;
    } else {
      if (valOrder < dstOptValOrder) {
        insertIdx = i;
        break;
      }
    }
  }
  return insertIdx;
}

moveListAddresses = function(src, dst, valPrefix, textPrefix)
{
  var arr = [];
  for (var i=0; i < src.length; i++) {
    var option = src.options[i];
    if (option.selected == true) {
      var duplex = false;
      for (var k=0; k < dst.length; k++) {
        if (dst.options[k].value == valPrefix+option.value) {
          dst.options[k].text = textPrefix+option.text;
          duplex = true;
          break;
        }
      }
      if (!duplex) {
        var insertIdx = _findInsertIdx(dst, valPrefix, option.value);
        dst.options.add(new Option(textPrefix+option.text, valPrefix+option.value), insertIdx);
        arr[arr.length] = valPrefix+option.value;
      }
      src.options[i] = null;
      i--;
    }
  }
  src.selectedIndex = -1;
  return arr;
}


addAddress = function(valPrefix, textPrefix)
{
  var tab_div_direct = _z("tab_div_direct");
  var tab_div_addrbook = _z("tab_div_addrbook");
  var tab_div_users = _z("tab_div_users");

  if (tab_div_direct && tab_div_direct.style.display != "none") {

    var dst = _z("addresses_selected");
    var addr_direct = _z("addr_direct");
    var direct_val = trim(addr_direct.value, true);

    if (direct_val == "") {
      return;
    }
    if (!checkMailAddrExp(direct_val)) {
      msg("<%= t('activerecord.errors.messages.invalid', :attribute => t('email.address')) %>");
      return;
    }

    var duplex = false;
    for (var k=0; k < dst.length; k++) {
      if (dst.options[k].value == valPrefix+direct_val) {
        dst.options[k].text = textPrefix+direct_val;
        duplex = true;
        break;
      }
    }
    if (!duplex) {
      dst.options[dst.length++] = new Option(textPrefix+direct_val, valPrefix+direct_val);
    }
    addr_direct.value = "";

  } else if (tab_div_addrbook && tab_div_addrbook.style.display != "none") {

    if (_z("addr_private_candidates").style.display != "none") {
      moveListAddresses(_z("addr_private_candidates"), _z("addresses_selected"), valPrefix, textPrefix)
    } else {
      moveListAddresses(_z("addr_common_candidates"), _z("addresses_selected"), valPrefix, textPrefix)
    }

  } else if (tab_div_users && tab_div_users.style.display != "none") {

    moveListAddresses(_z("user_candidates"), _z("addresses_selected"), valPrefix, textPrefix)
  }
}

trimAddressPrefix = function(val)
{
  return val.replace(/^[a-zA-Z]+[<%= Email::ADDR_PREFIX_SEPARATOR %>]/, "")
}

trimAddressOrder = function(val)
{
  return val.replace(/[<%= Email::ADDR_ORDER_SEPARATOR %>][0-9]+$/, "")
}

removeAddress = function()
{
  var list = _z("addresses_selected");

  var tab_div_direct = _z("tab_div_direct");
  var tab_div_addrbook = _z("tab_div_addrbook");
  var tab_div_users = _z("tab_div_users");
  var tab_div_students = _z("tab_div_students");

  if (tab_div_direct && tab_div_direct.style.display != "none") {
    var addr_direct = _z("addr_direct");
    var selOptions = getListSelected(list);
    if (addr_direct.value == "" && selOptions.length > 0) {
      addr_direct.value = selOptions[0];
      addr_direct.value = trimAddressPrefix(addr_direct.value);
      addr_direct.value = trimAddressOrder(addr_direct.value);
    }
    deleteList(list);

  } else if (tab_div_addrbook && tab_div_addrbook.style.display != "none") {

    if (_z("addr_private_candidates").style.display != "none") {
      moveListTrimPrefix(list, _z("addr_private_candidates"), "<%= Email::ADDR_PREFIX_SEPARATOR %>", ": ");
    } else {
      moveListTrimPrefix(list, _z("addr_common_candidates"), "<%= Email::ADDR_PREFIX_SEPARATOR %>", ": ");
    }

  } else if (tab_div_users && tab_div_users.style.display != "none") {
    moveListTrimPrefix(list, _z("user_candidates"), "<%= Email::ADDR_PREFIX_SEPARATOR %>", ": ");

  } else if (tab_div_students && tab_div_students.style.display != "none") {
    moveListTrimPrefix(list, _z("student_candidates"), "<%= Email::ADDR_PREFIX_SEPARATOR %>", ": ");
  } else {
    deleteList(list);
  }
}

var thetisBoxSaveProgress = new ThetisBox;
var saveFuncs = null;
var saveFuncsIdx = 0;

onSendMailClicked = function()
{
  if (_z("addresses_selected").length <= 0) {
    msg("<%= t('msg.specify_to_address') %>");
    return;
  }

  var email_subject = _z("email_subject");
  if (email_subject && email_subject.value.length <= 0) {
    confm("<%= t('mail.confirm_to_send_without_subject') %>", "doSend()");
  } else {
    confm("<%= t('mail.confirm_to_send') %>", "doSend()");
  }
}

doSend = function()
{
  doSave(true);
}

var _do_send = false;

doSave = function(do_smtp)
{
  if (saveFuncsIdx > 0) {
    msg("<%= t('mail.being_saved') %>");
    return;
  }

  _need_update = true;

  _do_send = do_smtp;
  saveFuncs = [];

  // Basic
  saveFuncs.push(
      function() {
        // Trim order suffix
        var addresList = _z("addresses_selected");
        for (var i=0; i < addresList.options.length; i++) {
          var opt = addresList.options[i];
          opt.value = trimAddressOrder(opt.value);
        }
        selectListAll(addresList);

        var frm = document.form_send_mail<%= form_idx %>;
        var target_id = "div_sendmail_content";

        var addParams = [];
        addParams.push("id="+_z("email_id").value);
        addParams.push(Form.serialize(frm));

        new Ajax.Updater(
            target_id,
            frm.action,
            {
              method:"post",
              parameters:addParams.join("&"),
              evalScripts:true,
              onComplete:function(request) {
                if (request.responseText.stripScripts().indexOf("<!-- $FLASH_NOTICE:ERROR -->") >= 0) {
                  setTimeout("onSaveError('basic')", 10);
                } else {
                  setTimeout("onSaveComplete('basic')", 10);
                }
              }
            }
          );
      }
    );

  if (_do_send) {
    saveFuncs.push(
        function() {
          var addParams = [];
          addParams.push("id="+_z("email_id").value);
          addParams.push("authenticity_token=<%= form_authenticity_token %>");

          new Ajax.Request(
              "<%= url_for(:controller => 'send_mails', :action => 'do_send') %>",
              {
                method:"post",
                parameters:addParams.join("&"),
                onComplete:function(request) {
                  request.responseText.evalScripts();
                  onSaveComplete("send");
                }
              }
            );
        }
      );
  }

  if (saveFuncs.length > 0) {
    thetisBoxSaveProgress.show("TOP-RIGHT", "", "PROGRESS", "", "", "");
    setTimeout("onSaveComplete('start')", 10);
  }
}

onSaveComplete = function(tabName)
{
  if (saveFuncsIdx < saveFuncs.length) {
    saveFuncs[saveFuncsIdx++]();
  } else {
    saveFuncsIdx = 0;
    thetisBoxSaveProgress.remove();
    if (_do_send) {
      if (thetisBoxMailForm) {
        thetisBoxMailForm.remove();
        thetisBoxMailForm = null;
      }
    } else {
      tip("<%= t('msg.save_success') %>");
    }
  }
}

onSaveError = function(tabName)
{
  saveFuncsIdx = 0;
  thetisBoxSaveProgress.remove();
}


var thetisBoxAttachFile = null;

attachFileToMail = function()
{
  if (thetisBoxAttachFile != null){
    thetisBoxAttachFile.remove();
    thetisBoxAttachFile = null;
  }

  var content = getFileSelector("onFileSelectOkClicked()", "onFileSelectCancelClicked()", "<%= t('btn.ok') %>", "<%= t('btn.cancel') %>", "mail_attach_uploader");

  thetisBoxAttachFile = new ThetisBox;
  thetisBoxAttachFile.title = "<%= t('item.attach_file') %>";
  thetisBoxAttachFile.resizable = true;

  if (thetisBoxMailForm) {
    thetisBoxMailForm.addChildBox(thetisBoxAttachFile);
  }

  thetisBoxAttachFile.show("CENTER", "400,340", "TRAY", "", "", content);

  initFileSelector("mail_attach_uploader");
}

onFileSelectOkClicked = function()
{
  _need_update = true;

  var btn_file_ok = _z("btn_file_ok");
  var btn_file_cancel = _z("btn_file_cancel");
  if (btn_file_ok) {
    btn_file_ok.disabled = true;
  }
  if (btn_file_cancel) {
    btn_file_cancel.disabled = true;
  }

  var thetisBoxProgress = prog("TOP-RIGHT");

  var getHashFunc = function() {
    return {
      id: _z("email_id").value,
    <% unless @mail_account.nil? %>
      mail_account_id: "<%= @mail_account.id %>",
    <% end %>
      authenticity_token: "<%= form_authenticity_token %>"
    };
  };
  ajaxUploadFile(
      "mail_attach_uploader",
      getHashFunc,
      "<%= url_for(:controller => 'send_mails', :action => 'add_attachment') %>",
      "div_sendmail_attach",
      function(){
        thetisBoxProgress.remove();

        thetisBoxAttachFile.remove();
        thetisBoxAttachFile = null;
      },
      function(){
        thetisBoxProgress.remove();
        msg("<%= t('msg.system_error')%>");

        thetisBoxAttachFile.remove();
        thetisBoxAttachFile = null;
      }
    );
}

onFileSelectCancelClicked = function()
{
  thetisBoxAttachFile.remove();
  thetisBoxAttachFile = null;
}

onDeleteAttachmentClicked = function(div_id, attach_id, title)
{
  confm("<%= t('paren.square.left') %>"+title+"<%= t('msg.confirm_to_delete') %>", "doDeleteAttachment('"+div_id+"', "+attach_id+")");
}

doDeleteAttachment = function(div_id, attach_id)
{
  _need_update = true;

  var thetisBoxProgress = prog("TOP-RIGHT");

  var addParams = [];
  addParams.push("id="+_z("email_id").value);
  addParams.push("attachment_id="+attach_id);
  addParams.push("authenticity_token=<%= form_authenticity_token %>");

  new Ajax.Updater(
      "div_sendmail_attach",
      "<%= url_for(:controller => 'send_mails', :action => 'delete_attachment') %>",
      {
        method:"post",
        parameters:addParams.join("&"),
        evalScripts:true,
        onComplete:function(request) {
          thetisBoxProgress.remove();
          removeElem(_z(div_id));
        }
      }
   );
}

</script>
